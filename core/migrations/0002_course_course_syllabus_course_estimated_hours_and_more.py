# Generated by Django 5.2.6 on 2025-09-11 18:21

import django.db.models.deletion
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='course',
            name='course_syllabus',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Detailed course syllabus'),
        ),
        migrations.AddField(
            model_name='course',
            name='estimated_hours',
            field=models.PositiveIntegerField(default=0, help_text='Estimated completion time in hours'),
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisites',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Course prerequisites'),
        ),
        migrations.AddField(
            model_name='course',
            name='total_modules',
            field=models.PositiveIntegerField(default=0, help_text='Total number of modules'),
        ),
        migrations.AddField(
            model_name='course',
            name='video_intro_url',
            field=models.URLField(blank=True, help_text='YouTube or Vimeo URL for course intro'),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=django_ckeditor_5.fields.CKEditor5Field(help_text='Detailed course description'),
        ),
        migrations.AlterField(
            model_name='course',
            name='learning_outcomes',
            field=django_ckeditor_5.fields.CKEditor5Field(help_text='What students will learn'),
        ),
        migrations.AlterField(
            model_name='course',
            name='overview',
            field=django_ckeditor_5.fields.CKEditor5Field(help_text='Brief course overview'),
        ),
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Module overview')),
                ('content', django_ckeditor_5.fields.CKEditor5Field(help_text='Detailed module content')),
                ('order', models.PositiveIntegerField(default=0)),
                ('duration_hours', models.PositiveIntegerField(default=0, help_text='Estimated hours to complete')),
                ('video_url', models.URLField(blank=True, help_text='YouTube or Vimeo URL for module video')),
                ('learning_objectives', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='What students will learn in this module')),
                ('resources', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Additional resources and reading materials')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='core.course')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('course', 'order')},
            },
        ),
        migrations.CreateModel(
            name='CodeExample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Explanation of the code example')),
                ('code', models.TextField(help_text='The actual code')),
                ('language', models.CharField(default='python', help_text='Programming language (python, r, sql, etc.)', max_length=50)),
                ('explanation', django_ckeditor_5.fields.CKEditor5Field(help_text='Detailed explanation of the code')),
                ('expected_output', models.TextField(blank=True, help_text='Expected output when code is run')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_interactive', models.BooleanField(default=False, help_text='Can students run this code?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_examples', to='core.coursemodule')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Exercise instructions and requirements')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('estimated_time_minutes', models.PositiveIntegerField(default=30, help_text='Estimated completion time in minutes')),
                ('hints', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Helpful hints for students')),
                ('solution', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Sample solution (optional)')),
                ('dataset_url', models.URLField(blank=True, help_text='URL to download exercise dataset')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_graded', models.BooleanField(default=False)),
                ('points', models.PositiveIntegerField(default=0, help_text='Points awarded for completion')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='core.coursemodule')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CapstoneProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Detailed project requirements and objectives')),
                ('requirements', django_ckeditor_5.fields.CKEditor5Field(help_text='Technical requirements and deliverables')),
                ('evaluation_criteria', django_ckeditor_5.fields.CKEditor5Field(help_text='How the project will be evaluated')),
                ('estimated_hours', models.PositiveIntegerField(default=40, help_text='Estimated completion time in hours')),
                ('difficulty_level', models.CharField(choices=[('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=20)),
                ('sample_datasets', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Information about datasets to be used')),
                ('deliverables', django_ckeditor_5.fields.CKEditor5Field(help_text='What students need to submit')),
                ('resources', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Additional resources and references')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_group_project', models.BooleanField(default=False, help_text='Is this a group project?')),
                ('max_group_size', models.PositiveIntegerField(default=1, help_text='Maximum group size if group project')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capstone_projects', to='core.course')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('course', 'order')},
            },
        ),
    ]
