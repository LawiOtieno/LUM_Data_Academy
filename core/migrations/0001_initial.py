# Generated by Django 5.2.6 on 2025-09-14 08:06

import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vision', django_ckeditor_5.fields.CKEditor5Field(help_text="Academy's vision statement")),
                ('mission', django_ckeditor_5.fields.CKEditor5Field(help_text="Academy's mission statement")),
                ('values', django_ckeditor_5.fields.CKEditor5Field(help_text='Core values and principles')),
                ('story', django_ckeditor_5.fields.CKEditor5Field(help_text='Journey and credibility of LUM Data Academy')),
                ('partners', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Partners and collaborators information')),
                ('hero_title', models.CharField(default='About LUM Data Academy', max_length=200)),
                ('hero_subtitle', models.CharField(blank=True, default='Equipping Africa with Future-Ready Data Skills', max_length=300)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'About Page',
                'verbose_name_plural': 'About Page',
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Job title', max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('department', models.CharField(help_text='e.g., Academic, Technology, Administration', max_length=100)),
                ('location', models.CharField(help_text='e.g., Nairobi, Remote, Hybrid', max_length=100)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship')], default='full_time', max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Detailed job description')),
                ('responsibilities', django_ckeditor_5.fields.CKEditor5Field(help_text='Key responsibilities')),
                ('requirements', django_ckeditor_5.fields.CKEditor5Field(help_text='Required qualifications and skills')),
                ('benefits', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Benefits and perks')),
                ('salary_range', models.CharField(blank=True, help_text='e.g., KShs 50,000 - 80,000', max_length=100)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('contact_email', models.EmailField(default='careers@lumdataacademy.org', max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Show on homepage')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Career Opportunity',
                'verbose_name_plural': 'Career Opportunities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('inquiry_type', models.CharField(choices=[('general', 'General Inquiry'), ('course', 'Course Information'), ('admission', 'Admission'), ('partnership', 'Partnership'), ('career', 'Career Opportunities')], default='general', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_responded', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Event description and details')),
                ('event_date', models.DateTimeField()),
                ('duration', models.CharField(help_text='e.g., 2 hours', max_length=50)),
                ('is_online', models.BooleanField(default=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('registration_deadline', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('role', models.CharField(help_text='e.g., Data Analyst at Company X', max_length=100)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(help_text='Testimonial content')),
                ('image', models.ImageField(blank=True, null=True, upload_to='testimonial_images/')),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(help_text='Main blog post content')),
                ('excerpt', django_ckeditor_5.fields.CKEditor5Field(help_text='Brief excerpt or summary (max 300 characters)')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(help_text='Survey description and purpose')),
                ('content', django_ckeditor_5.fields.CKEditor5Field(help_text='Survey questions and content')),
                ('survey_type', models.CharField(choices=[('course_feedback', 'Course Feedback'), ('general_feedback', 'General Feedback'), ('market_research', 'Market Research'), ('student_satisfaction', 'Student Satisfaction'), ('other', 'Other')], default='general_feedback', max_length=50)),
                ('target_audience', models.CharField(blank=True, help_text='e.g., Students, Alumni, General Public', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_anonymous', models.BooleanField(default=True, help_text='Allow anonymous responses')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('max_responses', models.PositiveIntegerField(blank=True, help_text='Maximum number of responses', null=True)),
                ('response_count', models.PositiveIntegerField(default=0, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
